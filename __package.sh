#!/bin/bash

# bespoke remote-resources packaging for a-pre-program-for-graphic-design.epub
# takes compressed .epub (as generated by indesign)
# unzips to make proof.epub
# then finds and replaces to insert corrected video tags
# and correct refs to video and audio in content.opf
# outputs proof.epub 
        
# sed -i (edit in place) requires .bak in bash
# also requires double quotes for substitution when includng variables
# for correct expansion and double escaping of newline character
# is necc for sed substitition multiple lines, add, or insert syntax
# sed s = substitute, sed a = add, sed i = insert
# sed s delimiter can be any character that follows s
# $1 = positional parameter (argument) 

DIR=$(pwd)
EPUB=$1
PROOF_BASEPATH=proof.epub/OEBPS
REMOTE="http\:\/\/a-pre-program-for-graphic-design.local"
# AUDIO_ONLY=true
DRYRUN=true

# cleanup 
rm -r proof.epub

# unzip
if [[ ! $DRYRUN ]]
then
    echo "compressed .epub --> $EPUB"
    echo "unzip --> proof.epub"
    mkdir proof
    unzip -q "$EPUB" -d "$DIR/proof"
    mv proof proof.epub
else
    rm -r proof.epub
    cp -r proof-.epub proof.epub
    wait
    echo "cp proof.epub done"
fi

for f in $PROOF_BASEPATH/*.xhtml
do
    FILEIN=$f
    # grep | sed | sed (returns format 'I-1.mp4')
    VIDEO_FILENAME=$(grep '.*-.*\.mp4' $FILEIN | sed 's:^.*src="video/::' | sed 's:" type.*::')
    if [[ $VIDEO_FILENAME ]]    # [[ ]] wraps condition in quotes
    then

        # 0. set basenames

        VIDEO_BASENAME=${VIDEO_FILENAME%.*}
        FILEIN_BASENAME=${FILEIN##*/}
        FILEIN_BASENAME=${FILEIN_BASENAME%.*}

        # 1. cp resources

        cp ../video/gif/_dots.gif $PROOF_BASEPATH/image/_dots.gif
        cp ../video/audio/$VIDEO_BASENAME.m4a $PROOF_BASEPATH/video/$VIDEO_BASENAME.m4a            
        rm $PROOF_BASEPATH/video/$VIDEO_BASENAME.mp4

        # 2. edit .xhthml

        # add preload, add poster
        sed -i.bak "s/controls=\"controls\">/controls=\"controls\" preload=\"auto\" poster=\"image\/_dots.gif\">/" $FILEIN

        # update source, add fallbacks (: = delimiter, tabs for spacing)
        sed -i.bak "s:<source src=\"video/I-1.mp4\" type=\"video/mp4\" />:<source src=\"$REMOTE/$VIDEO_BASENAME.mp4\" type=\"video/mp4\"/> \\
                                        <source src=\"video/$VIDEO_BASENAME.m4a\" type=\"audio/mp4\"/> \\
                                        Sorry, your e-reader does not support multimedia content.:" $FILEIN

        # 3. edit .opf

        # add property remote-resources
        sed -i.bak "s/<item id=\"$FILEIN_BASENAME\" href=\"$FILEIN_BASENAME.xhtml\" media-type=\"application\/xhtml+xml\" \/>/<item id=\"$FILEIN_BASENAME\" href=\"$FILEIN_BASENAME.xhtml\" media-type=\"application\/xhtml+xml\" properties=\"remote-resources\" \/>/" $PROOF_BASEPATH/content.opf

        # update resources, remote and local
        sed -i.bak "s/<item id=\"$VIDEO_BASENAME.mp4\" href=\"video\/$VIDEO_BASENAME.mp4\" media-type=\"video\/mp4\" \/>/<item id=\"$VIDEO_BASENAME.mp4\" href=\"$REMOTE\/$VIDEO_BASENAME.mp4\" media-type=\"video\/mp4\" \/> \\
                <item id=\"$VIDEO_BASENAME.m4a\" href=\"video\/$VIDEO_BASENAME.m4a\" media-type=\"audio\/mp4\" \/>/" $PROOF_BASEPATH/content.opf

    fi
done

# add _dots.gif
sed -i.bak "\/manifest>/i\\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <item id=\"_dots.gif\" href=\"image/_dots.gif\" media-type=\"image/gif\" />" $PROOF_BASEPATH/content.opf

# clean up *.bak
rm -r $PROOF_BASEPATH/*.bak

# ls .epub contents
ls -R proof.epub/

wait
echo "** all processes finished. **"
echo "done."
exit
