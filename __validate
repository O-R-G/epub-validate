#!/bin/bash

# requires compressed .epub or uncompressed .epub/
# zip files in correct sequence to make .epub
# then run epubcheck validator on result
# outputs 2 files
# uncompressed as proof.epub 
# compressed as validate.epub 
# and validation report on stdout
# $1 = positional parameter (argument) 

DIR=$(pwd)
EPUB=$1
if [[ $EPUB == *.epub ]]
then
    shift
fi

# parse command line options

while [ "$1" != "" ]; do
    case $1 in
        -v | --version )        shift
                                VERSION_WHATS_NEW=$1
                                shift
                                VERSION=true;;
        -h | --help )           echo -e "\
Usage: ./__validate [FILE]... [OPTIONS]...

Validate .epub

  Takes compressed .epub or uncompressed .epub/
  Zips files in correct sequence to make .epub
  Runs epubcheck validator on result
  Outputs 2 files
    uncompressed as proof.epub
    compressed as validate.epub
  Validation report on stdout

  -v, --version                 add <version_whats_new>, zip version.epub
                                followed by string like "1.0 This is what is new ..."
  -h, --help                    show help
"
            exit;;
    esac
done

# cleanup 
rm -r proof.epub
rm -r validate.epub
rm -r version.epub

# zip?
# mimetype needs to be the first file in the archive
# flag -X makes sure mimetype does not have an extra field in its zip header
# then view contents of zip

if [[ $(file -b "$EPUB") == directory ]]; then
    echo "uncompressed .epub --> $EPUB"
    echo "cp --> proof.epub"
    echo "zip --> validate.epub"
    cp -r "$EPUB/." proof.epub

    # zip manually in correct order
    # cd "$EPUB"
    # zip -rqX "$DIR/validate.epub" mimetype META-INF/ OEBPS/;
    # zip -rqX "$DIR/validate.epub" mimetype META-INF/ EPUB/;
    # cd "$DIR"

    # zip via epubcheck
    # https://github.com/IDPF/epub3-samples/blob/master/pack-single.sh
    # cp folder w/o .epub extension first to save with epubcheck
    # (epubcheck adds extension) then cleanup
    cp -r "$EPUB/." validate
    java -jar epubcheck-4.2.4/epubcheck.jar validate/ -mode exp -save 
    rm -r validate/
else
    echo "compressed .epub --> $EPUB"
    echo "cp --> validate.epub"
    echo "unzip --> proof.epub"
    mkdir proof
    unzip -q "$EPUB" -d "$DIR/proof"
    mv proof proof.epub
    cp "$EPUB" validate.epub
    java -jar epubcheck-4.2.4/epubcheck.jar validate.epub
fi 

if [[ $VERSION ]]
then

    # add <version_whats_new>
    echo "** versioning **"
    sed -i.bak "/<\/metadata>/i\\
    \ \ \ \ \ \ \ \ <version_whats_new>$VERSION_WHATS_NEW<\/version_whats_new>\\
    " proof.epub/OEBPS/content.opf
    wait

    # zip manually in correct order
    echo "** zip **"
    cd proof.epub
    zip -rqX "$DIR/version.epub" mimetype META-INF/ OEBPS/;
    wait

fi

wait
echo "** validate **"
echo "** all processes finished. **"
echo "done."
exit
